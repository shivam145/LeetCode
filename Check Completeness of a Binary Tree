/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
   
    bool isCompleteTree(TreeNode* root) {
        
        ios_base::sync_with_stdio(false);
        cin.tie(NULL);
        
        queue<TreeNode*> q;
        q.push(root);
        q.push(NULL);
        vector<int> result;
        while(root && !q.empty()) {
            
            TreeNode *temp = q.front();
            q.pop();
            if(temp) {
                
                if(temp->val == -1) {
                    result.push_back(temp->val);
                    continue;
                }
                
                result.push_back(temp->val);

                if(temp->left)
                    q.push(temp->left);
                else
                    q.push(new TreeNode(-1));
                if(temp->right)
                    q.push(temp->right);
                else
                    q.push(new TreeNode(-1));
            }
            else {
                
                if(q.size()>1)
                    q.push(NULL);
            }
        }
        
        int flag=0;
        for(int i = 0 ; i < result.size() ; i++) {
            
            if(flag && result[i]!=-1)
                return 0;
            if(result[i] == -1)
                flag=1;
        }
        return 1;
    }
};
