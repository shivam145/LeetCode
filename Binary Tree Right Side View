/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */

// Basically the logic is to do BFS(level order traversal) and add a node to result when its the last node of the level

class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        queue<TreeNode*> q;
        q.push(root);
        q.push(NULL);
        vector<int> result;
        while(root && !q.empty())
        {
            TreeNode *temp = q.front();
            q.pop();
            if(temp)
            {
                if(q.front()==NULL)
                    result.push_back(temp->val);
                if(temp->left)
                    q.push(temp->left);
                if(temp->right)
                    q.push(temp->right);
            }
            else
            {
                if(q.size()>=1)
                    q.push(NULL);
            }
            
        }
        return result;
    }
};
