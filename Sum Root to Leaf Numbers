/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void DFS(TreeNode *root,vector<string> &result,string s)
    {
        if(!root)
            return;
        
        if(!root->left && !root->right)
        {
            s+=to_string(root->val);
            result.push_back(s);
            s.pop_back();
        }
        s+=to_string(root->val);
        DFS(root->left,result,s);
        s.pop_back();
        s+=to_string(root->val);
        DFS(root->right,result,s);
        s.pop_back();
        return;
    }
    
    int sumNumbers(TreeNode* root) {
        string s;
        vector<string> result;
        long int ans=0;
        DFS(root,result,s);
        for(int i = 0 ;i<result.size();i++)
        {
            ans  = ans + stoi(result[i]);
        }
        return ans;
    }
    
};
