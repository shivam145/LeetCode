/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int findMax(vector<int> &nums,int start, int end) {
        int index = 0,maxi = INT_MIN;
        for(int i = start ; i <= end ; i++) {
            
            if(nums[i] > maxi) {
                index = i;
                maxi = nums[i];
            }
                
        }
        return index;
    }
    TreeNode* buildTree(vector<int> &nums,int start,int end) {
        
        if(start > end)
            return nullptr;
        
        int index = findMax(nums,start,end);
        
        TreeNode *root = new TreeNode(nums[index]);
        
        root->left = buildTree(nums,start,index-1);
        root->right = buildTree(nums,index+1,end);
        
        return root;
    
        
    }
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {
        
        return buildTree(nums,0,nums.size()-1);
    }
};
